OAuthFactory$new
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
source('functions_by_pablobarbera.R')
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
OAuthFactory$new()
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
registerTwitterOAuth(twitCred)
library(twitteR)
library(streamR)
library(ROAuth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL<- "https://api.twitter.com/oauth/access_token"
authURL<- "https://api.twitter.com/oauth/authorize"
consumerKey <- "IcdDHBtkWNqphlYM3USOq7iip"
consumerSecret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
OAuthFactory$new()
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
registerTwitterOAuth(twitCred)
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
library(twitteR)
library(streamR)
library(ROAuth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL<- "https://api.twitter.com/oauth/access_token"
authURL<- "https://api.twitter.com/oauth/authorize"
consumerKey <- "IcdDHBtkWNqphlYM3USOq7iip"
consumerSecret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(twitCred, file = "twitCred.Rdata")
source('functions_by_pablobarbera.R')
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
sampleStream("tweets_random.json", timeout = 20,
oauth = twitCred)
library(twitteR)
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
tweets
table(tweets$lang)
max(tweets$retweet_count)
which(tweets$retweet_count == max(tweets$retweet_count))
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
getCommonHashtags(tweets$text, n=50)
getTimeline(file.name="data/tweets_UW.json", screen_name="UW", n=1000, oauth=twitCred)
tweets_UW <- parseTweets("data/tweets_UW.json")
names(tweets_UW)
head(tweets_UW)
## search for tweets that mention Delta or American Airlines
tweets_delta <- searchTwitter("@delta", n=500)
tweets_AA<- searchTwitter("@AmericanAir", n=500)
#transform your data into a data frame
api_key<- "IcdDHBtkWNqphlYM3USOq7iip"
api_secret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
access_token<- "280994911-SyKEiqyaEvNluz0gynqnEgc4G5A5JegJ7x2NVwyL"
access_token_secret<- "qJ7rGtXVwuylKfwHuSrVUIFnIuOMZhLVo6sBO2vIb0EuY"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
tweets_delta <- searchTwitter("@delta", n=500)
tweets_AA<- searchTwitter("@AmericanAir", n=500)
data_delta<- twListToDF(tweets_delta)
data_AA<- twListToDF(tweets_AA)
head(data_delta)
#write the data to disk
write.csv(data_delta,"data/data_delta.csv")
write.csv(data_AA,"data/data_AA.csv")
getCurRateLimitInfo()
library(plyr)
library(stringr)
source("sentiment.r")
pos = readLines("opinion_lexicon/positive_words.txt")
neg = readLines("opinion_lexicon/negative_words.txt")
pos
data_delta<- read.csv("data/data_delta.csv")
data_AA<- read.csv("data/data_AA.csv")
scores_delta<- score.sentiment(data_delta$text,pos, neg)$score
scores_AA <- score.sentiment(data_AA$text,pos, neg)$score
mean(scores_delta)
mean(scores_AA)
sd(scores_delta)
sd(scores_AA)
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets$created_at)
head(tweets$user_created_at)
tweets$user_created_at[1]
as.date(tweets$user_created_at[1])
as.Date(tweets$user_created_at[1])
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
sampleStream("data/tweets_random.json", timeout = 20,
)
)
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
library(streamR)
library(ROAuth)
install.packages("streamR", dependencies=TRUE)
install.packages("twitteR")
install.packages("ROAuth")
library(twitteR)
library(streamR)
library(ROAuth)
##parameters and URLs for the Twitter API
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL<- "https://api.twitter.com/oauth/access_token"
authURL<- "https://api.twitter.com/oauth/authorize"
consumerKey <- "IcdDHBtkWNqphlYM3USOq7iip"
consumerSecret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(twitCred, file = "twitCred.Rdata")
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets)
##language of tweets
table(tweets$lang)
##Which of these tweets has received more retweets?
tweets$retweet_count
max(tweets$retweet_count)
## "which" would give us the index for the tweet that satisfies our request
which(tweets$retweet_count == max(tweets$retweet_count))
##twee with the highest number of retweets
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
## when the tweet was posted
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
##Which of these tweets was sent by the person with more followers?
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
## find the most common hashtags
getCommonHashtags(tweets$text, n=50)
getTimeline(file.name="data/tweets_UW.json", screen_name="UW", n=1000, oauth=twitCred)
tweets_UW <- parseTweets("data/tweets_UW.json")
names(tweets_UW)
head(tweets_UW)
install.packages("devtools")
library(devtools)
devtools::install_github("jrowen/twitteR", ref = "oauth_httr_1_0")
library(ROAuth)
library(twitteR)
api_key<- "tIpJYR61URwI1ZdMt26IQGT1T"
api_secret<- "U9D3Fin2MoucWHbOxqZkqm7kGHOLS4zXaOLsLVhmjmhk1W7GIk"
access_token<- "280994911-pcpfTl5xdZaDfEosTryfbrEtyqiKYLWSZPOjPXPr"
access_token_secret<- "aZS7zjLeP18qEf4euexAJ5sQxF836R8BpP6DKHY4ZKe8l"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
tweets_delta <- searchTwitter("@delta", n=500)
tweets_AA<- searchTwitter("@AmericanAir", n=500)
data_delta<- twListToDF(tweets_delta)
data_AA<- twListToDF(tweets_AA)
head(data_delta)
#write the data to disk
write.csv(data_delta,"data/data_delta.csv")
write.csv(data_AA,"data/data_AA.csv")
getCurRateLimitInfo()
install.packages("plyr")
install.packages("stringr")
library(plyr)
library(stringr)
source("sentiment.r")
# import positive and negative words
pos = readLines("opinion_lexicon/positive_words.txt")
neg = readLines("opinion_lexicon/negative_words.txt")
pos
neg
install.packages("stringr")
# import tweets for two airlines
data_delta<- read.csv("data/data_delta.csv")
data_AA<- read.csv("data/data_AA.csv")
scores_delta<- score.sentiment(data_delta$text,pos, neg)$score
scores_AA <- score.sentiment(data_AA$text,pos, neg)$score
mean(scores_delta)
mean(scores_AA)
sd(scores_delta)
sd(scores_AA)
rm(list=ls())
getwd()
install.packages("streamR", dependencies=TRUE)
install.packages("twitteR")
install.packages("ROAuth")
library(twitteR)
library(streamR)
library(ROAuth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL<- "https://api.twitter.com/oauth/access_token"
authURL<- "https://api.twitter.com/oauth/authorize"
consumerKey <- "IcdDHBtkWNqphlYM3USOq7iip"
consumerSecret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(twitCred, file = "twitCred.Rdata")
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
tweets
names(tweets)
head(tweets)
names(tweets)
head(tweets)
table(tweets$lang)
tweets$retweet_count
max(tweets$retweet_count)
which(tweets$retweet_count == max(tweets$retweet_count))
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
##Which of these tweets was sent by the person with more followers?
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
## find the most common hashtags
getCommonHashtags(tweets$text, n=50)
getTimeline(file.name="data/tweets_UW.json", screen_name="UW", n=1000, oauth=twitCred)
tweets_UW <- parseTweets("data/tweets_UW.json")
names(tweets_UW)
head(tweets_UW)
getwd()
library(ROAuth)
library(twitteR)
api_key<- "tIpJYR61URwI1ZdMt26IQGT1T"
api_secret<- "U9D3Fin2MoucWHbOxqZkqm7kGHOLS4zXaOLsLVhmjmhk1W7GIk"
access_token<- "280994911-pcpfTl5xdZaDfEosTryfbrEtyqiKYLWSZPOjPXPr"
access_token_secret<- "aZS7zjLeP18qEf4euexAJ5sQxF836R8BpP6DKHY4ZKe8l"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
tweets_Clinton <- searchTwitter("@HillaryClinton", n=500)
tweets_Trump<- searchTwitter("@realDonaldTrump", n=500)
data_Clinton<- twListToDF(tweets_Clinton)
data_Trump<- twListToDF(tweets_Trump)
head(data_Clinton)
head(data_Trump)
write.csv(data_Clinton,"data/data_Clinton.csv")
write.csv(data_Trump,"data/data_Trump.csv")
getCurRateLimitInfo()
getwd()
library(plyr)
library(stringr)
source("sentiment.r")
pos = readLines("opinion_lexicon/positive_words.txt")
neg = readLines("opinion_lexicon/negative_words.txt")
pos
neg
data_Clinton<- read.csv("data/data_Clinton.csv")
data_Trump<- read.csv("data/data_Trump.csv")
scores_Clinton<- score.sentiment(data_Clinton$text,pos, neg)$score
scores_Trump <- score.sentiment(data_Trump$text,pos, neg)$score
mean(scores_Clinton)
mean(scores_Trump)
sd(scores_Clinton)
sd(scores_Trump)
tweets_Clinton <- searchTwitter("@HillaryClinton", n=5000)
tweets_Trump<- searchTwitter("@realDonaldTrump", n=5000)
data_Clinton<- twListToDF(tweets_Clinton)
data_Trump<- twListToDF(tweets_Trump)
write.csv(data_Clinton,"data/data_Clinton.csv")
write.csv(data_Trump,"data/data_Trump.csv")
getCurRateLimitInfo()
pos = readLines("opinion_lexicon/positive_words.txt")
neg = readLines("opinion_lexicon/negative_words.txt")
pos
neg
# import tweets for two airlines
data_Clinton<- read.csv("data/data_Clinton.csv")
data_Trump<- read.csv("data/data_Trump.csv")
## Compute a simple sentiment score for each tweet: number of positive words
## minus number of negative words
scores_Clinton<- score.sentiment(data_Clinton$text,pos, neg)$score
scores_Trump <- score.sentiment(data_Trump$text,pos, neg)$score
mean(scores_Clinton)
mean(scores_Trump)
sd(scores_Clinton)
sd(scores_Trump)
library(ROAuth)
library(twitteR)
api_key<- "tIpJYR61URwI1ZdMt26IQGT1T"
api_secret<- "U9D3Fin2MoucWHbOxqZkqm7kGHOLS4zXaOLsLVhmjmhk1W7GIk"
access_token<- "280994911-pcpfTl5xdZaDfEosTryfbrEtyqiKYLWSZPOjPXPr"
access_token_secret<- "aZS7zjLeP18qEf4euexAJ5sQxF836R8BpP6DKHY4ZKe8l"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
tweets_Clinton <- searchTwitter("@HillaryClinton", n=500)
head(data_Clinton)
data_Clinton<- twListToDF(tweets_Clinton)
head(data_Clinton)
rm(list=ls())
rm(list=ls())
getwd()
library(twitteR)
library(streamR)
library(ROAuth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL<- "https://api.twitter.com/oauth/access_token"
authURL<- "https://api.twitter.com/oauth/authorize"
consumerKey <- "IcdDHBtkWNqphlYM3USOq7iip"
consumerSecret<- "OWlMV8SD9y8nz3HRMTYFaZDNCzJHLj8Wl2O4otupKcIhlYsJkY"
twitCred<- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(twitCred, file = "twitCred.Rdata")
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets)
tweets$lang
table(tweets$lang)
tweets$retweet_count
max(tweets$retweet_count)
which(tweets$retweet_count == max(tweets$retweet_count))
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets)
##language of tweets
table(tweets$lang)
##Which of these tweets has received more retweets?
tweets$retweet_count
max(tweets$retweet_count)
which(tweets$retweet_count == max(tweets$retweet_count))
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
##name of the user who posted the tweet
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
getCommonHashtags(tweets$text, n=50)
getTimeline(file.name="data/tweets_UW.json", screen_name="UW", n=1000, oauth=twitCred)
tweets_UW <- parseTweets("data/tweets_UW.json")
names(tweets_UW)
head(tweets_UW)
library(ROAuth)
library(twitteR)
api_key<- "tIpJYR61URwI1ZdMt26IQGT1T"
api_secret<- "U9D3Fin2MoucWHbOxqZkqm7kGHOLS4zXaOLsLVhmjmhk1W7GIk"
access_token<- "280994911-pcpfTl5xdZaDfEosTryfbrEtyqiKYLWSZPOjPXPr"
access_token_secret<- "aZS7zjLeP18qEf4euexAJ5sQxF836R8BpP6DKHY4ZKe8l"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
tweets_Clinton <- searchTwitter("@HillaryClinton", n=500)
tweets_Trump<- searchTwitter("@realDonaldTrump", n=500)
data_Clinton<- twListToDF(tweets_Clinton)
data_Trump<- twListToDF(tweets_Trump)
head(data_Clinton)
head(data_Trump)
write.csv(data_Clinton,"data/data_Clinton.csv")
write.csv(data_Trump,"data/data_Trump.csv")
getCurRateLimitInfo()
library(plyr)
library(stringr)
source("sentiment.r")
# import positive and negative words
pos = readLines("opinion_lexicon/positive_words.txt")
neg = readLines("opinion_lexicon/negative_words.txt")
pos
data_Clinton<- read.csv("data/data_Clinton.csv")
data_Trump<- read.csv("data/data_Trump.csv")
scores_Clinton<- score.sentiment(data_Clinton$text,pos, neg)$score
scores_Trump <- score.sentiment(data_Trump$text,pos, neg)$score
scores_Clinton
mean(scores_Clinton)
mean(scores_Trump)
sd(scores_Clinton)
sd(scores_Trump)
##Install the packages below and their dependecies
install.packages("streamR", dependencies=TRUE)
install.packages("twitteR")
install.packages("ROAuth")
library(streamR)
library(ROAuth)
library(rjson)
library(RCurl)
data <- readLines("data/random_tweets.json")
nof_lines <- length(data)
nof_lines
data.list<-lapply(data,function(x) fromJSON(x))
data.list<-lapply(data,function(x) fromJSON(x))
getwd()
getwd()
library(rjson)
library(RCurl)
data <- readLines("data/random_tweets.json")
head(data)
data <- readLines("data/tweets_random.json")
nof_lines <- length(data)
nof_lines
data.list<-lapply(data,function(x) fromJSON(x))
data.list[[1]]
data.list[[1]]$user$profile_image_url
data.list[[2]]$user$profile_image_url
data.list[[3]]$user$profile_image_url
data.list[[4]]$user$profile_image_url
data.list[[10]]$user$profile_image_url
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
####
## COLLECTING A RANDOM SAMPLE OF TWEETS
####
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets)
##language of tweets
table(tweets$lang)
##Which of these tweets has received more retweets?
tweets$retweet_count
max(tweets$retweet_count)
## "which" would give us the index for the tweet that satisfies our request
which(tweets$retweet_count == max(tweets$retweet_count))
##tweet with the highest number of retweets
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
##name of the user who posted the tweet
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
## when the tweet was posted
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
##Which of these tweets was sent by the person with more followers?
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
## find the most common hashtags
getCommonHashtags(tweets$text, n=50)
#check the directory where you are
getwd()
## If you are
library(streamR)
library(ROAuth)
source('functions_by_pablobarbera.R')
load("twitCred.Rdata")
####
sampleStream("data/tweets_random.json", timeout = 20,
oauth = twitCred)
tweets <- parseTweets("data/tweets_random.json", verbose = FALSE)
names(tweets)
head(tweets)
##language of tweets
table(tweets$lang)
table(tweets$lang)
tweets$retweet_count
max(tweets$retweet_count)
## "which" would give us the index for the tweet that satisfies our request
which(tweets$retweet_count == max(tweets$retweet_count))
##tweet with th
tweets$text[which(tweets$retweet_count == max(tweets$retweet_count))]
##name of the user who posted the tweet
tweets$screen_name[which(tweets$retweet_count == max(tweets$retweet_count))]
## when the tweet was posted
tweets$created_at[which(tweets$retweet_count == max(tweets$retweet_count))]
##Which of these tweets was sent by the person with more followers?
max(tweets$followers_count)
which(tweets$followers_count == max(tweets$followers_count))
tweets$text[which(tweets$followers_count == max(tweets$followers_count))]
## find the most common hashtags
getCommonHashtags(tweets$text, n=50)
getTimeline(file.name="data/tweets_UW.json", screen_name="UW", n=1000, oauth=twitCred)
tweets_UW <- parseTweets("data/tweets_UW.json")
names(tweets_UW)
head(tweets_UW)
#check the directory where you are
getwd()
## If you are not in the the folder "Collect_Tweets", move to that folder
## using
## setwd("YOUR_PATH_TO_THE_FOLDER")
library(rjson)
library(RCurl)
data <- readLines("data/tweets_random.json")
data <- readLines("data/tweets_random.json")
nof_lines <- length(data)
nof_lines
data.list<-lapply(data,function(x) fromJSON(x))
data.list[[1]]
data.list[[1]]$user$profile_image_url
data.list[[10]]$user$profile_image_url
