install.packages("SocialMediaLab")
install.packages("Rfacebook")
install.packages("plyr")
install.packages("stringr")
install.packages("dplyr")
install.packages("igraph")
library(SocialMediaLab)
library(Rfacebook)
library(plyr)
library(stringr)
library(dplyr, pos=99) # dplyr and igraph in high position to avoid masking plyr.
library(igraph, pos=100)
fb.appid     <- "1780494315513285"
fb.appsecret <- "7da550d172d82c84ad544a9411927bee"
fb_oauth <- AuthenticateWithFacebookAPI(appID = fb.appid,
appSecret = fb.appidsecret,
extended_permissions = FALSE, # Public Info
useCachedToken = TRUE)     # Use existing
rm(list=ls())
getwd()
install.packages("SocialMediaLab")
install.packages("plyr")
install.packages("stringr")
install.packages("dplyr")
install.packages("igraph")
library(SocialMediaLab)
library(Rfacebook)
library(plyr)
library(stringr)
library(dplyr, pos=99) # dplyr and igraph in high position to avoid masking plyr.
library(igraph, pos=100)
fb.appid     <- "313701255668598"
fb.appidsecret <- "5120a8933bcf092776880eecb1696774"
fb_oauth <- AuthenticateWithFacebookAPI(appID = fb.appid,
appSecret = fb.appidsecret,
extended_permissions = FALSE, # Public Info
useCachedToken = TRUE)
iussp.page.df <- getPage(page="IUSSP",  # Takes page ID or page name
token=fb_oauth,   # OAuth token
n=25,             # Number of posts to return
since=NULL,       # Date of earliest posts returned
until=NULL,       # Date of latest posts returned
feed=TRUE)
View(iussp.page.df)
names(iussp.page.df) # Get names of returned columns
head(iussp.page.df) # Take a peek at the data
trump.page.df    <- getPage("DonaldTrump", fb_oauth, n=10, feed=TRUE)
clinton.page.df  <- getPage("hillaryclinton", fb_oauth, n=10, feed=TRUE)
source("./Files/sentiment.r") # Script for analysis. Author: Jeffrey Breen
pos <- readLines("./Files/opinion_lexicon/positive_words.txt") # Positive words
neg <- readLines("./Files/opinion_lexicon/negative_words.txt") # Negative words
# Let's see what sort of words are "positive" or "negative".
sample(pos, size=9)
sample(neg, size=9)
clinton.ss <- score.sentiment(sentence  = clinton.page.df$message, # Text to score
pos.words = pos,                   # Positive words
neg.words = neg)$score
trump.ss   <- score.sentiment(trump.page.df$message, pos, neg)$score
st.err <- function(x){ return( sd(x) / sqrt( length(x) ) ) } # Standard error
data.frame(Mean=c(mean(clinton.ss), mean(trump.ss)),
SE=c(st.err(clinton.ss), st.err(trump.ss)),
row.names=c("Clinton", "Trump"))
View(iussp.page.df)
View(iussp.page.df)
write.csv(iussp.page.df,"./Files/data/iussp_FBpage.csv")
iuss.page.df<- read.csv("./Files/data/iussp_FBpage.csv")
names(iussp.page.df) # Get names of returned columns
head(iussp.page.df) # Take a peek at the data
write.csv(trump.page.df,"./Files/data/trump_FBpage.csv")
write.csv(clinton.page.df,"./Files/data/clinton_FBpage.csv")
trump.page.df<- read.csv("./Files/data/trump_FBpage.csv")
clinton.page.df<- read.csv("./Files/data/clinton_FBpage.csv")
clinton.ss <- score.sentiment(sentence  = clinton.page.df$message, # Text to score
pos.words = pos,                   # Positive words
neg.words = neg)$score             # Negative words
trump.ss   <- score.sentiment(trump.page.df$message, pos, neg)$score
st.err <- function(x){ return( sd(x) / sqrt( length(x) ) ) } # Standard error
data.frame(Mean=c(mean(clinton.ss), mean(trump.ss)),
SE=c(st.err(clinton.ss), st.err(trump.ss)),
row.names=c("Clinton", "Trump"))
demography.search.df <- searchPages("Demography", fb_oauth, n=20)
demography.search.df <- searchPages("Demography", fb_oauth, n=10)
help("searchPages")
demography.search.df <- searchPages("Demography", fb_oauth, n=10)
demography.search.df <- searchPages("Demography", fb_oauth, n=20)
write.csv(demography.search.df,"./Files/data/demography_search_pages.csv")
demography.search.df <- read.csv("./Files/data/demography_search_pages.csv")
names(demography.search.df)
demography.search.df$name
trump.network.df <- CollectDataFacebook(pageName="DonaldTrump",
rangeFrom="2016-10-01",
rangeTo="2016-10-03",
writeToFile=FALSE,
verbose=TRUE,
n=5)
View(trump.network.df)
write.csv(trump.network.df,"./Files/data/trump_network.csv")
trump.network.df <- read.csv("./Files/data/trump_network.csv")
help("Create")
trump.network <- Create(trump.network.df, type="bimodal")
help("Collect")
trump.network.df <- Collect(pageName="DonaldTrump",
rangeFrom="2016-10-01",
rangeTo="2016-10-03",
writeToFile=FALSE,
verbose=TRUE,
n=5)
trump.network.df <- CollectDataFacebook(pageName="DonaldTrump",
rangeFrom="2016-10-01",
rangeTo="2016-10-03",
writeToFile=FALSE,
verbose=TRUE,
n=5)
Create(trump.network.df, type="bimodal")
trump.network <- Create(trump.network.df, type="bimodal")
plot(trump.network)
tkplot(trump.network, canvas.width=800, canvas.height=800) # TclTk alternative
tkplot(trump.network, canvas.width=800, canvas.height=800) # TclTk alternative
trump.network
plot(trump.network)
tkplot(trump.network, canvas.width=800, canvas.height=800) # TclTk alternative
library(tcltk)
install.packages("tcltk")
library(tcltk)
library("tcltk")
library(tcltk)
tkplot(trump.network, canvas.width=800, canvas.height=800) # TclTk alternative
install.packages("tcltk2")
library(tcltk2)
tkplot(trump.network, canvas.width=800, canvas.height=800) # TclTk alternative
trump.network.df
install.packages("SocialMediaLab")
library(SocialMediaLab)
getwd()
## If you are
library(SocialMediaLab)
library(Rfacebook)
library(plyr)
library(stringr)
library(dplyr, pos=99) # dplyr and igraph in high position to avoid masking plyr.
library(igraph, pos=100)
fb.appid     <- "313701255668598"
fb.appidsecret <- "5120a8933bcf092776880eecb1696774"
fb_oauth <- AuthenticateWithFacebookAPI(appID = fb.appid,
appSecret = fb.appidsecret,
extended_permissions = FALSE, # Public Info
useCachedToken = TRUE)     # Use existing
iussp.page.df <- getPage(page="IUSSP",  # Takes page ID or page name
token=fb_oauth,   # OAuth token
n=25,             # Number of posts to return
since=NULL,       # Date of earliest posts returned
until=NULL,       # Date of latest posts returned
feed=TRUE)
write.csv(iussp.page.df,"./Files/data/iussp_FBpage.csv")
iuss.page.df<- read.csv("./Files/data/iussp_FBpage.csv")
names(iussp.page.df) # Get names of returned columns
head(iussp.page.df)
trump.page.df    <- getPage("DonaldTrump", fb_oauth, n=10, feed=TRUE)
clinton.page.df  <- getPage("hillaryclinton", fb_oauth, n=10, feed=TRUE)
write.csv(trump.page.df,"./Files/data/trump_FBpage.csv")
write.csv(clinton.page.df,"./Files/data/clinton_FBpage.csv")
trump.page.df<- read.csv("./Files/data/trump_FBpage.csv")
clinton.page.df<- read.csv("./Files/data/clinton_FBpage.csv")
source("./Files/sentiment.r") #
pos <- readLines("./Files/opinion_lexicon/positive_words.txt") # Positive words
neg <- readLines("./Files/opinion_lexicon/negative_words.txt") # Negative words
# Let's see what sort of words are "positive" or "negative".
sample(pos, size=9)
sample(neg, size=9)
clinton.page.df$message
clinton.ss <- score.sentiment(sentence  = clinton.page.df$message, # Text to score
pos.words = pos,                   # Positive words
neg.words = neg)$score
trump.ss   <- score.sentiment(trump.page.df$message, pos, neg)$score
st.err <- function(x){ return( sd(x) / sqrt( length(x) ) ) } # Standard error
data.frame(Mean=c(mean(clinton.ss), mean(trump.ss)),
SE=c(st.err(clinton.ss), st.err(trump.ss)),
row.names=c("Clinton", "Trump"))
demography.search.df <- searchPages("Demography", fb_oauth, n=20)
write.csv(demography.search.df,"./Files/data/demography_search_pages.csv")
demography.search.df <- read.csv("./Files/data/demography_search_pages.csv")
names(demography.search.df)
demography.search.df$name
trump.network.df <- CollectDataFacebook(pageName="DonaldTrump",
rangeFrom="2016-10-01",
rangeTo="2016-10-03",
writeToFile=FALSE,
verbose=TRUE,
n=5)
write.csv(trump.network.df,"./Files/data/trump_network.csv")
trump.network.df <- read.csv("./Files/data/trump_network.csv")
head(trump.network.df)
trump.network <- Create(trump.network.df, type="bimodal")
